<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!--Log4Net config section-->
  <configSections>
    <!--<sectionGroup name="common">  
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />  
    </sectionGroup>-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Zeje.Core"/>
  </configSections>
  <!--<common>  
    <logging>  
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">  
        <arg key="configType" value="INLINE"/>  
      </factoryAdapter>  
    </logging>  
  </common>-->
  <log4net>
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="logs\log"/>
      <appendToFile value="true"/>
      <rollingStyle value="Date"/>
      <datePattern value="yyyyMMdd'.txt'"/>
      <staticLogFileName value="false"/>
      <!--
      %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
      %n(new line):换行
      %d(datetime):输出当前语句运行的时刻
      %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
      %t(thread id):当前语句所在的线程ID
      %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
      %c(class):当前日志对象的名称，例如：
      模式字符串为：%-10c -%m%n
      代码为：
      ILog log=LogManager.GetLogger(“Exam.Log”);
      log.Debug(“Hello”);
      则输出为下面的形式：
      Exam.Log       - Hello
      %L：输出语句所在的行号
      %F：输出语句所在的文件名
      %-数字：表示该项的最小长度，如果不够，则用空格填充
      -->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
      </layout>
    </appender>
    <!--定义输出到控制台命令行中-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
      </layout>
    </appender>
    <!--定义输出到windows事件中-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
      </layout>
    </appender>
    <!--定义输出到数据库中-->
    <appender name="AdoNetAppender_MSSql" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="10" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="server=localhost;database=Zeje.Sys;uid=sa;pwd=123456;timeout=300;" />
      <commandText value="INSERT INTO SysLog4net ([LogDate],[Thread],[LogLevel],[Logger],[Message],[Exception]) VALUES  (@log_date, @thread, @log_level, @logger, @message, @exception)" />" />
      <!--定义各个参数-->
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%t" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%p" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%m" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <!-- 如果不启用相应的日志记录，可以通过这种方式注释掉-->
      <level value="WARN"/>
      <level value="INFO"/>
      <level value="DEBUG"/>
      <level value="FINE"/>
      <!--文件形式记录日志-->
       <appender-ref ref="RollingLogFileAppender" />
      <!--控制台控制显示日志-->
      <appender-ref ref="ConsoleAppender" />
      <!--Windows事件日志-->
      <appender-ref ref="EventLogAppender" />
      <!--数据库日志-->
      <appender-ref ref="AdoNetAppender_MSSql" />
    </root>
    <!-- Specify the level for some specific categories -->
    <logger name="SysLogger">
      <!-- <appender-ref ref="B"/> -->
      <level value="ALL" />
      <appender-ref ref="AdoNetAppender_MSSql" />
    </logger>
  </log4net>
  <!--Log4Net config section end-->
</configuration>